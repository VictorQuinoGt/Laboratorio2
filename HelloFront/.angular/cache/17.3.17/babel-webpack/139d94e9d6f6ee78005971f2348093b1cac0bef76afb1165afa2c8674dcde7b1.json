{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { PersonService } from '../../services/person.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nconst _c0 = () => [\"/persons\"];\nexport let PersonFormComponent = /*#__PURE__*/(() => {\n  class PersonFormComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.svc = inject(PersonService);\n      this.route = inject(ActivatedRoute);\n      this.router = inject(Router);\n      this.id = signal(null);\n      this.form = this.fb.group({\n        firstName: ['', [Validators.required, Validators.maxLength(100)]],\n        lastName: ['', [Validators.required, Validators.maxLength(100)]],\n        email: ['', [Validators.required, Validators.email]]\n      });\n    }\n    ngOnInit() {\n      const idParam = this.route.snapshot.paramMap.get('id');\n      if (idParam) {\n        this.id.set(+idParam);\n        this.svc.getById(+idParam).subscribe(p => this.form.patchValue(p));\n      }\n    }\n    save() {\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      const value = this.form.value;\n      if (this.id()) {\n        this.svc.update(this.id(), value).subscribe(() => this.router.navigate(['/persons']));\n      } else {\n        this.svc.add(value).subscribe(() => this.router.navigate(['/persons']));\n      }\n    }\n    static {\n      this.ɵfac = function PersonFormComponent_Factory(t) {\n        return new (t || PersonFormComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PersonFormComponent,\n        selectors: [[\"app-person-form\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 22,\n        vars: 4,\n        consts: [[3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"fill\", 2, \"width\", \"320px\"], [\"matInput\", \"\", \"formControlName\", \"firstName\", \"required\", \"\"], [\"appearance\", \"fill\", 2, \"width\", \"320px\", \"margin-left\", \"12px\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"required\", \"\"], [\"appearance\", \"fill\", 2, \"width\", \"400px\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\", \"type\", \"email\"], [2, \"margin-top\", \"12px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-stroked-button\", \"\", \"color\", \"basic\", 2, \"margin-left\", \"8px\", 3, \"routerLink\"]],\n        template: function PersonFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\")(1, \"h2\");\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function PersonFormComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.save();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 1)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Nombre\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-form-field\", 3)(9, \"mat-label\");\n            i0.ɵɵtext(10, \"Apellido\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"div\");\n            i0.ɵɵelementStart(13, \"mat-form-field\", 5)(14, \"mat-label\");\n            i0.ɵɵtext(15, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"div\", 7)(18, \"button\", 8);\n            i0.ɵɵtext(19, \"Guardar\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"a\", 9);\n            i0.ɵɵtext(21, \"Cancelar\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.id() ? \"Editar Cliente\" : \"Nuevo Cliente\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(17);\n            i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n          }\n        },\n        dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, RouterModule, i2.RouterLink, MatCardModule, i3.MatCard, MatButtonModule, i4.MatAnchor, i4.MatButton, MatFormFieldModule, i5.MatFormField, i5.MatLabel, MatInputModule, i6.MatInput],\n        styles: [\"[_nghost-%COMP%]{display:block}\"]\n      });\n    }\n  }\n  return PersonFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}