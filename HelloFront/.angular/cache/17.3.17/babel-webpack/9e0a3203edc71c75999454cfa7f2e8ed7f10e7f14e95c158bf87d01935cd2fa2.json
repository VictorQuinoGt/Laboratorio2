{"ast":null,"code":"import { inject, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { PersonService } from '../../services/person.service';\nimport { ItemService } from '../../services/item.service';\nimport { OrderService } from '../../services/order.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/input\";\nfunction OrderCreateComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", p_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", p_r1.firstName, \" \", p_r1.lastName, \" \");\n  }\n}\nfunction OrderCreateComponent_div_12_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const it_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", it_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", it_r3.name, \" (\", i0.ɵɵpipeBind2(2, 3, it_r3.price, \"1.2-2\"), \") \");\n  }\n}\nfunction OrderCreateComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Item\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 13)(5, \"mat-option\", 3);\n    i0.ɵɵtext(6, \"-- Seleccione --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, OrderCreateComponent_div_12_mat_option_7_Template, 3, 6, \"mat-option\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-form-field\", 14)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Cantidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-form-field\", 16)(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Precio (opcional)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 18)(17, \"strong\");\n    i0.ɵɵtext(18, \"Total:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function OrderCreateComponent_div_12_Template_button_click_21_listener() {\n      const i_r4 = i0.ɵɵrestoreView(_r2).index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.removeLine(i_r4));\n    });\n    i0.ɵɵelementStart(22, \"span\", 8);\n    i0.ɵɵtext(23, \"close\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const group_r6 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", group_r6);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.items());\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(20, 4, ctx_r4.lineTotal(i_r4), \"1.2-2\"), \" \");\n  }\n}\nexport let OrderCreateComponent = /*#__PURE__*/(() => {\n  class OrderCreateComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.personSvc = inject(PersonService);\n      this.itemSvc = inject(ItemService);\n      this.orderSvc = inject(OrderService);\n      this.persons = signal([]);\n      this.items = signal([]);\n      this.form = this.fb.group({\n        personId: [null, Validators.required],\n        lines: this.fb.array([])\n      });\n      this.lineTotal = i => {\n        const g = this.lines.at(i);\n        const itemId = g.get('itemId')?.value;\n        const qty = +(g.get('quantity')?.value || 0);\n        const override = g.get('price')?.value;\n        const item = this.items().find(x => x.id === itemId);\n        const price = override ?? item?.price ?? 0;\n        return price * qty;\n      };\n      this.grandTotal = computed(() => this.lines.controls.reduce((acc, _, i) => acc + this.lineTotal(i), 0));\n    }\n    get lines() {\n      return this.form.get('lines');\n    }\n    ngOnInit() {\n      this.personSvc.getAll().subscribe(p => this.persons.set(p));\n      this.itemSvc.getAll().subscribe(i => {\n        this.items.set(i);\n        if (this.lines.length === 0) this.addLine();\n      });\n    }\n    addLine() {\n      this.lines.push(this.fb.group({\n        itemId: [null, Validators.required],\n        quantity: [1, [Validators.required, Validators.min(1)]],\n        price: [null]\n      }));\n    }\n    removeLine(i) {\n      this.lines.removeAt(i);\n    }\n    submit() {\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      const val = this.form.value;\n      const payload = {\n        personId: val.personId,\n        lines: (val.lines || []).map(l => ({\n          itemId: l.itemId,\n          quantity: +l.quantity,\n          price: l.price ? +l.price : undefined\n        }))\n      };\n      this.orderSvc.create(payload).subscribe({\n        next: res => {\n          alert(`Orden #${res.number} creada. Total: ${res.grandTotal}`);\n          this.form.reset();\n          this.lines.clear();\n          this.addLine();\n        },\n        error: e => {\n          console.error(e);\n          alert('Error al crear la orden');\n        }\n      });\n    }\n    static {\n      this.ɵfac = function OrderCreateComponent_Factory(t) {\n        return new (t || OrderCreateComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: OrderCreateComponent,\n        selectors: [[\"app-order-create\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 23,\n        vars: 8,\n        consts: [[3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"fill\", 2, \"width\", \"320px\"], [\"formControlName\", \"personId\", \"required\", \"\"], [3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [2, \"margin-top\", \"16px\"], [\"class\", \"line-row\", 3, \"formGroup\", 4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"type\", \"button\", 3, \"click\"], [1, \"material-icons\"], [2, \"text-align\", \"right\", \"margin-top\", \"16px\"], [2, \"text-align\", \"right\", \"margin-top\", \"12px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"line-row\", 3, \"formGroup\"], [\"formControlName\", \"itemId\", \"required\", \"\"], [\"appearance\", \"fill\", 2, \"width\", \"120px\", \"margin-left\", \"12px\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"1\", \"formControlName\", \"quantity\"], [\"appearance\", \"fill\", 2, \"width\", \"160px\", \"margin-left\", \"12px\"], [\"matInput\", \"\", \"type\", \"number\", \"step\", \"0.01\", \"formControlName\", \"price\", \"placeholder\", \"Usa el precio del item\"], [2, \"width\", \"140px\", \"margin\", \"30px 12px 0\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 2, \"margin-top\", \"20px\", 3, \"click\"]],\n        template: function OrderCreateComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\")(1, \"h2\");\n            i0.ɵɵtext(2, \"Realizar Orden\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function OrderCreateComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 1)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Persona\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"mat-select\", 2)(8, \"mat-option\", 3);\n            i0.ɵɵtext(9, \"-- Seleccione --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, OrderCreateComponent_mat_option_10_Template, 2, 3, \"mat-option\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"div\", 5);\n            i0.ɵɵtemplate(12, OrderCreateComponent_div_12_Template, 24, 7, \"div\", 6);\n            i0.ɵɵelementStart(13, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function OrderCreateComponent_Template_button_click_13_listener() {\n              return ctx.addLine();\n            });\n            i0.ɵɵelementStart(14, \"span\", 8);\n            i0.ɵɵtext(15, \"add\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(16, \" Agregar l\\u00EDnea \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"h3\", 9);\n            i0.ɵɵtext(18);\n            i0.ɵɵpipe(19, \"number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\", 10)(21, \"button\", 11);\n            i0.ɵɵtext(22, \"Guardar Orden\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"value\", null);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.persons());\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.lines.controls);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"Total: \", i0.ɵɵpipeBind2(19, 5, ctx.grandTotal(), \"1.2-2\"), \"\");\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, i1.DecimalPipe, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinValidator, i2.FormGroupDirective, i2.FormControlName, RouterModule, MatCardModule, i3.MatCard, MatButtonModule, i4.MatButton, i4.MatIconButton, MatFormFieldModule, i5.MatFormField, i5.MatLabel, MatSelectModule, i6.MatSelect, i7.MatOption, MatInputModule, i8.MatInput, MatIconModule],\n        styles: [\".line-row[_ngcontent-%COMP%]{display:flex;align-items:center;flex-wrap:wrap;margin-bottom:8px}\"]\n      });\n    }\n  }\n  return OrderCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}